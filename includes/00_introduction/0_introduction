<h1 id="introduction">Introduction</h1>

<p>This documentation describes Boostcom&rsquo;s MPC APIs that allow to manage Loyalty Club, its members and content.</p>

<h2 id="hosts">Hosts</h2>

<p>Production: <a href="https://bpc-api.boostcom.no">https://bpc-api.boostcom.no</a></p>

<p>Production (APAC region): <a href="https://bpc-api.apac.boostcom.com">https://bpc-api.apac.boostcom.com</a></p>

<p>Staging: <a href="https://bpc-api.dev.boostcom.no">https://bpc-api.dev.boostcom.no</a></p>

<h3 id="https-tls-requirement">HTTPS (TLS) requirement</h3>

<p>To make connection to Boostcom&rsquo;s MPC APIs you have to use HTTPS with TLS encryption.
Your client has to support TLS1.2+ with strong ciphers.</p>

<h2 id="common-params-and-headers">Common params and headers</h2>

<h3 id="content-type-header">&ldquo;content-type&rdquo; header</h3>

<p>This API supports <code class="prettyprint">application/json</code> only. </p>

<p>Both payload and response body are supposed to be a valid JSON so when making a request send a <code class="prettyprint">content-type: application/json</code> header.</p>

<p>If payload is not a valid JSON, then <code class="prettyprint">406 Not Acceptable</code> HTTP code and empty response body are returned.</p>

<h3 id="x-client-authorization-header">&ldquo;x-client-authorization&rdquo; header</h3>

<blockquote>
<p>Example header: <code class="prettyprint">x-client-authorization: B7t9U9tsoWsGhrv2ouUoSqpM</code></p>
</blockquote>

<p>All of the endpoints <strong>require</strong> a client authorization header - <code class="prettyprint">x-client-authorization</code>.</p>

<p>It should be used only on backend and never exposed in frontend code.</p>

<p>Each token has are permits assigned to it. Depending what permits are assigned, access to some of the endpoints
may be restricted.</p>

<p>If you miss your authentication token, please <a href="http://boostcom.no">let us know</a>.</p>

<h3 id="x-user-agent-header">&ldquo;x-user-agent&rdquo; header</h3>

<blockquote>
<p>Example header: <code class="prettyprint">x-user-agent: Infinity Mall Android App</code></p>
</blockquote>

<p><code class="prettyprint">x-user-agent</code> is <strong>required</strong> to distinguish specific client for information and debugging purposes so we better know who uses the service.</p>

<p>It should be arbitrarily chosen to represent client specifics (e.g. &lsquo;Infinity Mall Android App v1.2&rsquo; or &lsquo;Infinity Mall Backend Service&rsquo;)</p>

<h3 id="x-product-name-header">&ldquo;x-product-name&rdquo; header</h3>

<blockquote>
<p>Example header: <code class="prettyprint">x-product-name: android-app</code></p>
</blockquote>

<p>Each system that is communicating with us should uniquely identify itself so it is possible to distinguish optin/update channels.
That will allow further targeting members by communication channel.</p>

<p>For that we use product name. It should be passed as <strong>required</strong> header <code class="prettyprint">x-product-name</code> that is intended to provide the necessary granularity.</p>

<p>If you miss your product name, please <a href="http://boostcom.no">let us know</a>.</p>

<h3 id="authorization-header">&ldquo;authorization&rdquo; header</h3>

<blockquote>
<p>Example header: <code class="prettyprint">authorization: Bearer 8433d608645345a45ce5a0f5ba1225e57546e86ac49e5fec842159dc82218522</code></p>
</blockquote>

<p>See: <a href="#oauth2">OAuth2</a></p>

<h3 id="loyalty-club-slug-param">Loyalty club slug param</h3>

<blockquote>
<p>Example slug: &lsquo;infinity-mall&rsquo;</p>
</blockquote>

<p>As all of the API endpoints work in the context of specific Loyalty Club, they&rsquo;re scoped within it&rsquo;s identifier - <code class="prettyprint">:loyalty_club_slug</code></p>

<p>It&rsquo;s an unique slugified name of the Loyalty Club.</p>

<h3 id="msisdn-param"><a name="msisdn-param"></a> Msisdn param</h3>

<p>Members in our systems may be identified with their phone numbers (msisdns) according to <a href="https://en.wikipedia.org/wiki/E.164">E.164</a>
We use format without leading <code class="prettyprint">00</code> or <code class="prettyprint">+</code> and without spaces, so that it contains only digits, i.e. <code class="prettyprint">4740485124</code>.</p>

<h2 id="common-http-error-codes">Common HTTP error codes</h2>

<table><thead>
<tr>
<th>Status</th>
<th>Reason</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">401</code></td>
<td><code class="prettyprint">x-client-authorization</code> is invalid (or doesn&rsquo;t match provided loyalty club or product)</td>
</tr>
<tr>
<td><code class="prettyprint">402</code></td>
<td>Feature is not enabled for the Loyalty Club</td>
</tr>
<tr>
<td><code class="prettyprint">403</code></td>
<td>Not authorized to perform this action (provided <code class="prettyprint">x-client-authorization</code> doesn&rsquo;t have required permit)</td>
</tr>
<tr>
<td><code class="prettyprint">404</code></td>
<td>The requested resource doesn&rsquo;t exist</td>
</tr>
<tr>
<td><code class="prettyprint">422</code></td>
<td>Invalid parameters are provided (e.g. incorrect properties on member creation)</td>
</tr>
<tr>
<td><code class="prettyprint">460</code></td>
<td>OAuth token required for the action is invalid (applies only to OAuth-related actions - see <a href="#oauth2">OAuth2</a>)</td>
</tr>
<tr>
<td><code class="prettyprint">470</code></td>
<td>Some of required header is missing</td>
</tr>
<tr>
<td><code class="prettyprint">471</code></td>
<td>Some of headers is incorrect</td>
</tr>
<tr>
<td><code class="prettyprint">503</code></td>
<td>Server is down for maintenance</td>
</tr>
</tbody></table>

<p>Also, most of handled errors have JSON response body like this:</p>

<p><code class="prettyprint">{&quot;error&quot;: &quot;Message describing what went wrong&quot;}</code></p>

<h2 id="pagination-json-model"><a name="pagination-model"></a> Pagination JSON model</h2>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"total_count"</span><span class="p">:</span><span class="w"> </span><span class="mi">2050</span><span class="p">,</span><span class="w">
    </span><span class="s2">"per_page"</span><span class="p">:</span><span class="w"> </span><span class="mi">1000</span><span class="p">,</span><span class="w">
    </span><span class="s2">"total_pages"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="s2">"current_page"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="s2">"next_page"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
    </span><span class="s2">"prev_page"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
    </span><span class="s2">"is_first_page"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"is_last_page"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
    </span><span class="s2">"is_out_of_range"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Used to present information about paginated pages</p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>total_count</td>
<td>integer</td>
<td>Number of all available results</td>
</tr>
<tr>
<td>per_page</td>
<td>integer</td>
<td>Number of results returned per request</td>
</tr>
<tr>
<td>total_pages</td>
<td>integer</td>
<td>Number of all available pages</td>
</tr>
<tr>
<td>current_page</td>
<td>integer</td>
<td></td>
</tr>
<tr>
<td>next_page</td>
<td>integer</td>
<td>Next available page (<code class="prettyprint">null</code> when it&rsquo;s a last page)</td>
</tr>
<tr>
<td>prev_page</td>
<td>integer</td>
<td>Previous available page (<code class="prettyprint">null</code> when it&rsquo;s a first page)</td>
</tr>
<tr>
<td>is_first_page</td>
<td>boolean</td>
<td></td>
</tr>
<tr>
<td>is_last_page</td>
<td>boolean</td>
<td></td>
</tr>
<tr>
<td>is_out_of_range</td>
<td>boolean</td>
<td>Is given <code class="prettyprint">per_page</code> param out of range?</td>
</tr>
</tbody></table>

<h2 id="invalid-parameters-errors-422"><a name="invalid-parameters-errors-model"></a> Invalid parameters errors (422)</h2>

<blockquote>
<p>Example:</p>
</blockquote>
<pre class="highlight javascript"><code><span class="c1">// Considering that request with following payload has been sent:</span>
<span class="p">{</span>
  <span class="s2">"member"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"first_name"</span><span class="p">:</span> <span class="s2">"s"</span><span class="p">,</span>
    <span class="s2">"msisdns"</span><span class="p">:</span> <span class="p">[</span>
      <span class="s2">"123"</span><span class="p">,</span>
      <span class="s2">"4740769126"</span><span class="p">,</span>
      <span class="s2">""</span>
    <span class="p">]</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Following response is returned: </span>
<span class="p">{</span>
  <span class="s2">"error"</span><span class="p">:</span> <span class="s2">"Invalid parameters"</span><span class="p">,</span>
  <span class="s2">"details"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"member"</span><span class="p">:</span> <span class="p">{</span>
      <span class="s2">"name"</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">{</span>
          <span class="s2">"value"</span><span class="p">:</span> <span class="s2">"s"</span><span class="p">,</span>
          <span class="s2">"error"</span><span class="p">:</span> <span class="s2">"too_short"</span><span class="p">,</span>
          <span class="s2">"options"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s2">"min_length"</span><span class="p">:</span> <span class="mi">0</span>
          <span class="p">},</span>
          <span class="s2">"message"</span><span class="p">:</span> <span class="s2">"is too short"</span>
        <span class="p">},</span>
        <span class="p">{</span>
          <span class="s2">"value"</span><span class="p">:</span> <span class="s2">"s"</span><span class="p">,</span>
          <span class="s2">"error"</span><span class="p">:</span> <span class="s2">"invalid_format"</span><span class="p">,</span>
          <span class="s2">"options"</span><span class="p">:</span> <span class="p">{</span>
            <span class="s2">"format"</span><span class="p">:</span> <span class="s2">"/[A-Z][a-z]+/"</span>
          <span class="p">},</span>
          <span class="s2">"message"</span><span class="p">:</span> <span class="s2">"has invalid format"</span>
        <span class="p">}</span>
      <span class="p">],</span>
      <span class="s2">"msisdns"</span><span class="p">:</span> <span class="p">{</span>
        <span class="s2">"0"</span><span class="p">:</span> <span class="p">[</span>
          <span class="p">{</span>
            <span class="s2">"value"</span><span class="p">:</span> <span class="s2">"32"</span><span class="p">,</span>
            <span class="s2">"error"</span><span class="p">:</span> <span class="s2">"invalid_msisdn"</span><span class="p">,</span>
            <span class="s2">"options"</span><span class="p">:</span> <span class="p">{},</span>
            <span class="s2">"message"</span><span class="p">:</span> <span class="s2">"is not a valid MSISDN"</span>
          <span class="p">}</span>
        <span class="p">],</span>
        <span class="s2">"2"</span><span class="p">:</span> <span class="p">[</span>
          <span class="p">{</span>
            <span class="s2">"value"</span><span class="p">:</span> <span class="s2">""</span><span class="p">,</span>
            <span class="s2">"error"</span><span class="p">:</span> <span class="s2">"blank"</span><span class="p">,</span>
            <span class="s2">"options"</span><span class="p">:</span> <span class="p">{},</span>
            <span class="s2">"message"</span><span class="p">:</span> <span class="s2">"cannot be blank"</span>
          <span class="p">}</span>
        <span class="p">]</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// It means that in given payload:</span>
<span class="c1">// * member.name is too short </span>
<span class="c1">// * member.name has invalid format</span>
<span class="c1">// * member.msisdns[0] is not a valid MSISDN</span>
<span class="c1">// * member.msisdns[2] is blank</span>
</code></pre>
<p>Some of the endpoints (it&rsquo;s noted on specific request&rsquo;s description) return invalid parameters errors in the standardized way.</p>

<p>For them, when some of parameter (either JSON body or URL/Query) is invalid, server responds with 422 with a following 
object:  </p>

<table><thead>
<tr>
<th>key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>error</td>
<td>String</td>
<td>Always &ldquo;Invalid parameters&rdquo;</td>
</tr>
<tr>
<td>details</td>
<td>Errors object</td>
<td>See <a href="#errors-object">Errors</a> below</td>
</tr>
<tr>
<td>details.(path.0.to.)parameter_name</td>
<td>Array<ParameterError></td>
<td>See <a href="#parameter-error-object">ParameterError</a> below</td>
</tr>
</tbody></table>

<h4 id="errors-object"><a name="errors-object"></a> Errors object</h4>

<p>It&rsquo;s a recursive tree structure, corresponding to the structure original payload.
Objects being parts of arrays are represented by their array indexes.</p>

<p>Each leaf node is an array of <a href="#parameter-error-object">ParameterError</a> objects for given parameter.</p>

<h4 id="parametererror-object"><a name="parameter-error-object""></a> ParameterError object</h4>

<table><thead>
<tr>
<th>key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>value</td>
<td>Mixed</td>
<td>Value of given parameter</td>
</tr>
<tr>
<td>error</td>
<td>String</td>
<td>Symbol of error that relates to this parameter</td>
</tr>
<tr>
<td>options</td>
<td>Object</td>
<td>Contains options of specific validation rule. For example <code class="prettyprint">{&quot;max&quot;: 15}</code>.</td>
</tr>
<tr>
<td>message</td>
<td>String</td>
<td>Human-readable error message</td>
</tr>
</tbody></table>

<h4 id="common-validation-errors"><a name="common-validation-errors"></a> Common validation errors</h4>

<table><thead>
<tr>
<th>Error key</th>
<th>Options</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>presence</td>
<td></td>
<td>When not present</td>
</tr>
<tr>
<td>inclusion</td>
<td><code class="prettyprint">in</code> - contains permitted values</td>
<td>When doesn&rsquo;t match list of permitted values</td>
</tr>
<tr>
<td>must_be_an_object</td>
<td></td>
<td></td>
</tr>
<tr>
<td>must_be_an_array</td>
<td></td>
<td></td>
</tr>
<tr>
<td>must_be_an_array_of_objects</td>
<td></td>
<td></td>
</tr>
<tr>
<td>must_have_elements_of_type</td>
<td><code class="prettyprint">type</code> - required type</td>
<td></td>
</tr>
<tr>
<td>not_an_integer</td>
<td></td>
<td></td>
</tr>
<tr>
<td>invalid_msisdn</td>
<td></td>
<td>When cannot be processed as a valid <a href="#msisdn-param">MSISDN</a></td>
</tr>
<tr>
<td>invalid_email</td>
<td></td>
<td></td>
</tr>
<tr>
<td>invalid_iso_8601_time</td>
<td></td>
<td>When not valid according to <a href="#https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a></td>
</tr>
<tr>
<td>attribute_cannot_be_present_with</td>
<td><code class="prettyprint">with</code> - other attribute name</td>
<td>Mutually exclusive with another attribute</td>
</tr>
<tr>
<td>size_too_small</td>
<td><code class="prettyprint">number</code> - min size</td>
<td>When array has not enough elements</td>
</tr>
<tr>
<td>size_too_large</td>
<td><code class="prettyprint">number</code> - max size</td>
<td>When array has too many elements</td>
</tr>
<tr>
<td>size_not_match</td>
<td><code class="prettyprint">number</code> - exact size</td>
<td>When array has not exactly required number of elements</td>
</tr>
<tr>
<td>taken</td>
<td></td>
<td>When another record already uses this value</td>
</tr>
<tr>
<td>not_a_number</td>
<td></td>
<td></td>
</tr>
<tr>
<td>greater_than</td>
<td><code class="prettyprint">number</code> - min value</td>
<td>When not &gt; <code class="prettyprint">number</code></td>
</tr>
<tr>
<td>greater_or_equal_to</td>
<td><code class="prettyprint">number</code> - min value</td>
<td>When not &gt;= <code class="prettyprint">number</code></td>
</tr>
<tr>
<td>less_than</td>
<td><code class="prettyprint">number</code> - max value</td>
<td>When not &lt; <code class="prettyprint">number</code></td>
</tr>
<tr>
<td>less_or_equal_to</td>
<td><code class="prettyprint">number</code> - max value</td>
<td>When not &lt;= <code class="prettyprint">number</code></td>
</tr>
<tr>
<td>invalid</td>
<td><code class="prettyprint">format</code> - regex</td>
<td>When does not match regex</td>
</tr>
</tbody></table>
