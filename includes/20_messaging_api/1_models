<h1 id="messaging-api"><a name="messaging"></a> Messaging API</h1>

<aside class="warning">
This API is under development. Therefore, it may not be ready for use and is a subject to change at any time.
</aside>

<h2 id="common-models"><a name="messaging-models"></a> Common models</h2>

<h3 id="message-model"><a name="messaging-message-model"></a> Message model</h3>

<blockquote>
<p>Message example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">758131</span><span class="p">,</span><span class="w">
  </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"DD3"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"shorten_urls"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="s2">"track_in_shortener"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="s2">"service"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="s2">"campaign_id"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T10:01:09.467Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T10:01:09.467Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"channels"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">55781</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sms"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"sender"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"alphanumeric"</span><span class="p">,</span><span class="w"> </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Infinity"</span><span class="w"> </span><span class="p">},</span><span class="w">
      </span><span class="s2">"template"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609193</span><span class="p">,</span><span class="w">
        </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hei {{name}}"</span><span class="w"> </span><span class="p">},</span><span class="w">
        </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.625Z"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.625Z"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="s2">"sendings_status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"scheduled"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"sendings_count"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
  </span><span class="s2">"latest_sending"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3920</span><span class="p">,</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"scheduled"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"audience_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">107103</span><span class="p">,</span><span class="w">
    </span><span class="s2">"recipients_count"</span><span class="p">:</span><span class="w"> </span><span class="mi">83</span><span class="p">,</span><span class="w">
    </span><span class="s2">"scheduled_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-10-15T15:27:02.853Z"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.625Z"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.625Z"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Message stores business-level information and configuration.</p>

<p>It has <a href="#messaging-template-model">Templates</a> through <a href="#messaging-channel-model">Channels</a> (currently only one is supported). </p>

<p>It may be sent, more than once, by scheduling <a href="#messaging-sending-model">Sendings</a> to specific recipients.</p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>id</strong></td>
<td>integer</td>
<td></td>
</tr>
<tr>
<td><strong>name</strong></td>
<td>string</td>
<td></td>
</tr>
<tr>
<td><strong>shorten_urls</strong></td>
<td>boolean</td>
<td>Should sendings for this message have URLs shortened with MPC Shortener?</td>
</tr>
<tr>
<td><strong>track_in_shortener</strong></td>
<td>boolean</td>
<td>Should MPC Shortener track users?</td>
</tr>
<tr>
<td>service</td>
<td>enum</td>
<td>MPC <a href="#messaging-message-service">Service</a> the Message is related to</td>
</tr>
<tr>
<td>campaign_id</td>
<td>integer</td>
<td>MPC&rsquo;s campaign ID (applicable to <code class="prettyprint">campaigns</code> service)</td>
</tr>
<tr>
<td><strong>channels</strong></td>
<td><a href="#messaging-channel-model">Channel</a>[]</td>
<td>Channels the message is sent with</td>
</tr>
<tr>
<td><strong>sendings_status</strong></td>
<td>enum</td>
<td><a href="#messaging-message-sendings-status">Aggregated Sendings status</a></td>
</tr>
<tr>
<td><strong>sendings_count</strong></td>
<td>integer</td>
<td>Number of Sendings of Message</td>
</tr>
<tr>
<td><strong>latest_sending</strong></td>
<td><a href="#messaging-message-sending-model">MessageSending</a></td>
<td>Most recent Sending of Message</td>
</tr>
<tr>
<td><strong>created_at</strong></td>
<td>datetime</td>
<td>Time of creation</td>
</tr>
<tr>
<td><strong>updated_at</strong></td>
<td>datetime</td>
<td>Time of last update</td>
</tr>
</tbody></table>

<h5 id="aggregated-sendings-status"><a name="messaging-message-sendings-status"></a> Aggregated Sendings status</h5>

<p>If all Message&rsquo;s Sendings are <code class="prettyprint">transmitted</code>, <code class="prettyprint">cancelled</code>, <code class="prettyprint">failed</code> or <code class="prettyprint">skipped</code>, then <code class="prettyprint">sendings_status</code> is <code class="prettyprint">finished</code>.</p>

<p>If all Message&rsquo;s Sendings are <code class="prettyprint">draft</code>, then <code class="prettyprint">sendings_status</code> is <code class="prettyprint">draft</code>.</p>

<p>If both above conditions are not true, then <code class="prettyprint">sendings_status</code> is <code class="prettyprint">scheduled</code>.</p>

<h5 id="messagesending-model"><a name="messaging-message-sending-model"></a> MessageSending model</h5>

<p>Simplified version of <a href="#messaging-sending-model">Sending</a>&lsquo;s with limited set of attributes:</p>

<table><thead>
<tr>
<th>Key</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>id</strong></td>
<td><a href="#messaging-sending-model">Sending#id</a></td>
</tr>
<tr>
<td>audience_id</td>
<td><a href="#messaging-sending-model">Sending#audience_id</a></td>
</tr>
<tr>
<td><strong>status</strong></td>
<td><a href="#messaging-sending-model">Sending#status</a></td>
</tr>
<tr>
<td><strong>scheduled_at</strong></td>
<td><a href="#messaging-sending-model">Sending#scheduled_at</a></td>
</tr>
<tr>
<td><strong>created_at</strong></td>
<td><a href="#messaging-sending-model">Sending#created_at</a></td>
</tr>
<tr>
<td><strong>updated_at</strong></td>
<td><a href="#messaging-sending-model">Sending#updated_at</a></td>
</tr>
<tr>
<td><strong>recipients_count</strong></td>
<td>Number of recipients</td>
</tr>
</tbody></table>

<h4 id="service"><a name="messaging-message-service"></a> Service</h4>

<p>Service is used to provide special treatment for some types of Messages that are bound to specific MPC features.</p>

<p>A permit is required for managing Messages of each Service.</p>

<table><thead>
<tr>
<th>Service</th>
<th>Permit</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>campaigns</td>
<td>Messages:Api:Messages:UseService:Campaigns</td>
<td>For MPC Campaigns Messages</td>
</tr>
<tr>
<td>tenants</td>
<td>Messages:Api:Messages:UseService:Tenants</td>
<td>For MPC Tenant Engagement Module Messages</td>
</tr>
</tbody></table>

<h3 id="channel-model"><a name="messaging-channel-model"></a> Channel model</h3>

<blockquote>
<p>Channel example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">55781</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sms"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"sender"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"alphanumeric"</span><span class="p">,</span><span class="w"> </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Infinity"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"template"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609193</span><span class="p">,</span><span class="w">
     </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w">
     </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hei {{name}}"</span><span class="w"> </span><span class="p">},</span><span class="w">
     </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
     </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.625Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.625Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Channel defines how <a href="#messaging-message-model">Message</a> may be sent along with the content (defined by <a href="#messaging-template-model">Template</a>) that 
should be sent through this channel.</p>

<p>Please note that while we allow to set multiple channels on single message for future usage, 
currently just one (the first) is utilized as the Message&rsquo;s single channel.</p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td><strong>id</strong></td>
<td>integer</td>
</tr>
<tr>
<td><strong>type</strong></td>
<td>enum: <code class="prettyprint">[&#39;sms&#39;, &#39;email&#39;, &#39;push&#39;]</code></td>
</tr>
<tr>
<td><strong>created_at</strong></td>
<td>datetime</td>
</tr>
<tr>
<td><strong>updated_at</strong></td>
<td>datetime</td>
</tr>
<tr>
<td><strong>template</strong></td>
<td><a href="#messaging-template-model">Template</a></td>
</tr>
<tr>
<td><a href="#messaging-channel-specific-attributes">(channel-specific attributes)</a></td>
<td></td>
</tr>
</tbody></table>

<h4 id="channel-specific-attributes"><a name="messaging-channel-specific-attributes"></a> Channel-specific attributes</h4>

<p>When not provided explicitly, values of all the following attributes are taken from Loyalty Club configuration.</p>

<table><thead>
<tr>
<th>Key</th>
<th>Channel type</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td>sender.type</td>
<td><code class="prettyprint">sms</code></td>
<td>enum: <code class="prettyprint">[&#39;alphanumeric&#39;, &#39;international&#39;]</code></td>
</tr>
<tr>
<td>sender.value</td>
<td><code class="prettyprint">sms</code></td>
<td>string</td>
</tr>
<tr>
<td>from_email</td>
<td><code class="prettyprint">email</code></td>
<td>string</td>
</tr>
<tr>
<td>from_name</td>
<td><code class="prettyprint">email</code></td>
<td>string</td>
</tr>
</tbody></table>

<p>The <code class="prettyprint">sender</code> describes how SMS sender will be displayed to the receiver of SMS.
By default, a value from Loyalty Club configuration is used.</p>

<p>Depending on selected <code class="prettyprint">sender.type</code>, <code class="prettyprint">sender.value</code> can be provided according to the following table:  </p>

<table><thead>
<tr>
<th>Type</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">alphanumeric</code></td>
<td>String consisting of 2-11 characters</td>
</tr>
<tr>
<td><code class="prettyprint">international</code></td>
<td>Any MSISDN</td>
</tr>
</tbody></table>

<h3 id="template-model"><a name="messaging-template-model"></a> Template model</h3>

<blockquote>
<p>Template example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609193</span><span class="p">,</span><span class="w">
  </span><span class="s2">"wrapper_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">5913</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hei {{name}}"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Template describes content of the <a href="#messaging-message-model">Message</a>. </p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>id</strong></td>
<td>integer</td>
<td></td>
</tr>
<tr>
<td>wrapper_id</td>
<td>integer</td>
<td>ID of <a href="#messaging-template-wrapping">wrapping template</a></td>
</tr>
<tr>
<td><strong>type</strong></td>
<td>enum: <code class="prettyprint">[&#39;plain&#39;, &#39;email&#39;, &#39;bee_email&#39;, &#39;push&#39;]</code></td>
<td></td>
</tr>
<tr>
<td><strong>content</strong></td>
<td>Object</td>
<td>Definition depends on the <code class="prettyprint">type</code>. See below</td>
</tr>
<tr>
<td><strong>created_at</strong></td>
<td>datetime</td>
<td>Time of creation</td>
</tr>
<tr>
<td><strong>updated_at</strong></td>
<td>datetime</td>
<td>Time of last update</td>
</tr>
</tbody></table>

<div class="clear"></div>

<h4 id="plain-template"><a name="messaging-template-model-plain"></a> <code class="prettyprint">plain</code> template</h4>

<blockquote>
<p>Plain Template example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609193</span><span class="p">,</span><span class="w">
  </span><span class="s2">"wrapper_id"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hei {{name}}"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This type of template can be assigned to any type.</p>

<p>Content of such template consists of single (required) property - <code class="prettyprint">body</code>.</p>

<div class="clear"></div>

<h4 id="email-template"><a name="messaging-template-model-email"></a> <code class="prettyprint">email</code> template</h4>

<blockquote>
<p>Email Template example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609194</span><span class="p">,</span><span class="w">
  </span><span class="s2">"wrapper_id"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"email"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"subject"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Welcome!"</span><span class="p">,</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;b&gt;Hei {{name}}&lt;/b&gt;"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This type of template can be assigned to <code class="prettyprint">email</code> channel.</p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td><strong>content.body</strong></td>
<td>HTML</td>
</tr>
<tr>
<td>content.subject</td>
<td>string</td>
</tr>
</tbody></table>

<div class="clear"></div>

<h4 id="bee_email-template"><a name="messaging-template-model-bee-email"></a> <code class="prettyprint">bee_email</code> template</h4>

<blockquote>
<p>BeeEmail Template example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609193</span><span class="p">,</span><span class="w">
  </span><span class="s2">"wrapper_id"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"bee_email"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"subject"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Welcome!"</span><span class="p">,</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"&lt;b&gt;Hei {{name}}&lt;/b&gt;"</span><span class="p">,</span><span class="w"> </span><span class="s2">"bee_json"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This type of template is used internally by MPC UI. </p>

<p>It differs from <code class="prettyprint">email</code> by containing JSON source which is used by <a href="https://docs.beefree.io/">Bee Plugin</a> to generate HTML <code class="prettyprint">body</code>. </p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td><strong>content.body</strong></td>
<td>HTML</td>
</tr>
<tr>
<td><strong>content.bee_json</strong></td>
<td>Object</td>
</tr>
<tr>
<td>content.subject</td>
<td>string</td>
</tr>
</tbody></table>

<div class="clear"></div>

<h4 id="push-template"><a name="messaging-template-model-push"></a> <code class="prettyprint">push</code> template</h4>

<blockquote>
<p>Push Template example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">609193</span><span class="p">,</span><span class="w">
  </span><span class="s2">"wrapper_id"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"push"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"subject"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Welcome"</span><span class="p">,</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hi {{name}}!"</span><span class="p">,</span><span class="w"> </span><span class="s2">"uri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"iml://app/cpn"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-15T12:45:08.618Z"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This type of template can be assigned to <code class="prettyprint">push</code> channel.</p>

<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td><strong>content.body</strong></td>
<td>string</td>
</tr>
<tr>
<td>content.subject</td>
<td>string</td>
</tr>
<tr>
<td>content.uri</td>
<td>URL</td>
</tr>
</tbody></table>

<h4 id="wrapping"><a name="messaging-template-wrapping"></a> Wrapping</h4>

<p><code class="prettyprint">@todo</code></p>

<h4 id="template-generating"><a name="messaging-template-generating"></a> Template generating</h4>

<p><code class="prettyprint">@todo</code></p>

<h3 id="sending-model"><a name="messaging-sending-model"></a> Sending model</h3>

<blockquote>
<p>Sending example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1000016</span><span class="p">,</span><span class="w">
  </span><span class="s2">"audience_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">106642</span><span class="p">,</span><span class="w">
  </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"scheduled"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"scheduled_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-18T09:28:59.918Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"scheduled_with"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"in"</span><span class="p">:</span><span class="w"> </span><span class="s2">"15 minutes"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"relative"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-18T09:13:59.937Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-18T09:13:59.937Z"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"recipients"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"member_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">150</span><span class="p">,</span><span class="w">
      </span><span class="s2">"msisdn"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
      </span><span class="s2">"email"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
      </span><span class="s2">"app_token"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
      </span><span class="s2">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"first_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Piotr"</span><span class="w"> </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>id</strong></td>
<td>integer</td>
<td></td>
</tr>
<tr>
<td>audience_id</td>
<td>integer</td>
<td>ID of audience the sending is directed to</td>
</tr>
<tr>
<td><strong>status</strong></td>
<td>string</td>
<td>See: <a href="#messaging-sending-status">Sending status</a></td>
</tr>
<tr>
<td><strong>scheduled_at</strong></td>
<td>datetime</td>
<td>Time of sending execution</td>
</tr>
<tr>
<td>scheduled_with</td>
<td>Object</td>
<td>Params the sending has been scheduled with - See <a href="#messaging-sending-schedule-payload-model">SendingSchedulePayload</a></td>
</tr>
<tr>
<td><strong>created_at</strong></td>
<td>datetime</td>
<td>Time of creation</td>
</tr>
<tr>
<td><strong>updated_at</strong></td>
<td>datetime</td>
<td>Time of update</td>
</tr>
<tr>
<td><strong>recipients</strong></td>
<td><a href="#messaging-recipient-model">Recipient</a>[]</td>
<td>Inline recipients the sending is directed to</td>
</tr>
</tbody></table>

<h4 id="sending-status"><a name="messaging-sending-status"></a> Sending status</h4>

<p>The Sending may have one of following statuses, which may be grouped into <strong>initial states</strong>, <strong>execution steps</strong> and the <strong>final outcomes</strong>:</p>

<ul>
<li><strong>initial states</strong>:

<ul>
<li><strong>draft</strong> - When API client didn&rsquo;t&rsquo;t define the schedule (or has <code class="prettyprint">draft: true</code> flag)</li>
<li><strong>scheduled</strong> - When scheduled to be sent at specific time by API client</li>
</ul></li>
</ul>

<p>Sending may have status changed from <code class="prettyprint">draft</code> to <code class="prettyprint">scheduled</code>  and vice versa, as long as the execution haven&rsquo;t started yet.  </p>

<ul>
<li><strong>execution steps</strong>:

<ul>
<li><strong>preparing</strong> - Building Dispatches for Recipients and Audience members</li>
<li><strong>prepared</strong> - Dispatches are built, ready for transmission</li>
<li><strong>transmitting</strong> - Dispatches are being transmitted</li>
</ul></li>
</ul>

<p>Preparing is a process that builds Dispatches for given recipients. Potentially Sendings may have very large Audiences assigned, 
so it may take some time to build Dispatches for all of them. Therefore, the preparation starts 5 minutes before the actual transmission.</p>

<ul>
<li><strong>final outcomes</strong>: 

<ul>
<li><strong>transmitted</strong> - When the Dispatches have been transmitted</li>
<li><strong>skipped</strong> - When no recipients could be resolved for it (for example, Audience may lose its members over time).</li>
<li><strong>cancelled</strong> - When cancelled by API client at any point of execution (see: <a href="#todo-cancel-endpoint">Sending cancellation</a>.</li>
<li><strong>failed</strong> - When the execution couldn&rsquo;t be finished in about 20 minutes after the desired time </li>
</ul></li>
</ul>

<p>Whenever Sending is <code class="prettyprint">cancelled</code> or <code class="prettyprint">failed</code>, it cannot be rescheduled again. 
It must be created again, for example with <a href="#todo">Clone sending endpoint</a>. </p>

<h3 id="recipient-model"><a name="messaging-recipient-model"></a> Recipient model</h3>

<blockquote>
<p>Sending example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"member_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">150</span><span class="p">,</span><span class="w">
  </span><span class="s2">"msisdn"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4740485124"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"recipient@example.com"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"app_token"</span><span class="p">:</span><span class="w"> </span><span class="s2">"c6OE_joK28g:APA91bFkT5fzhdWJMJswPo3btVLxtMmhi7jKdOE_VL1IhkSmuoz3iEQMg4Cq"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"first_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Piotr"</span><span class="w"> </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>member_id</td>
<td>integer</td>
<td>ID of MPC member</td>
</tr>
<tr>
<td>msisdn</td>
<td><a href="#msisdn-param">MSISDN</a></td>
<td></td>
</tr>
<tr>
<td>email</td>
<td>email</td>
<td></td>
</tr>
<tr>
<td>app_token</td>
<td>email</td>
<td></td>
</tr>
<tr>
<td>properties</td>
<td>Object</td>
<td>Arbitrary keys that can be used as merge-fields in the message template</td>
</tr>
</tbody></table>

<p><br />
Recipient may be an MPC member (identified by <code class="prettyprint">member_id</code>) or an arbitrary sending receivers - <code class="prettyprint">msisdn</code>, <code class="prettyprint">email</code> or <code class="prettyprint">push</code>.  </p>

<h4 id="mpc-member-recipient">MPC member recipient</h4>

<p>When <code class="prettyprint">member_id</code> is provided, other identifiers will be ignored and actual identifiers for sending execution will 
be fetched from MPC member&rsquo;s data (for example, for <code class="prettyprint">sms</code> channel member&rsquo;s <code class="prettyprint">msisdn</code> will be used as a sending receiver).</p>

<p>Merge-fields for template will be fetched from MPC - extended by provided <code class="prettyprint">properties</code>.</p>

<h4 id="arbitrary-identifier-recipient">Arbitrary identifier recipient</h4>

<p>Without <code class="prettyprint">member_id</code>, at least one identifier relevant to message&rsquo;s channels definition is required.</p>

<p>For example, if <code class="prettyprint">sms</code> and <code class="prettyprint">email</code> channels are defined on message, <code class="prettyprint">msisdn</code> or <code class="prettyprint">email</code> is required.</p>

<p>Given <code class="prettyprint">properties</code> will be used as template&rsquo;s merge-fields. </p>
