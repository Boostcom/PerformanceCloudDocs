<h3 id='a-name-messaging-message-payload-model-a-messagepayload-model-1'><span id=a-name-messaging-message-payload-model-a-messagepayload-model></span><a name="messaging-message-payload-model"></a> MessagePayload model</h3>
<blockquote>
<p>MessagePayload example - it creates an SMS message which will be sent at given time to members of given audience:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"My message"</span><span class="p">,</span><span class="w"> </span><span class="s2">"shorten_urls"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="s2">"track_in_shortener"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="s2">"campaign_id"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">32</span><span class="p">,</span><span class="w">
  </span><span class="s2">"channels"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sms"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"sender"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"alphanumeric"</span><span class="p">,</span><span class="w"> </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Infinity"</span><span class="w"> </span><span class="p">},</span><span class="w">
      </span><span class="s2">"template"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"inline"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w"> </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hi {{name}}"</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="s2">"sending"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"schedule"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"absolute"</span><span class="p">,</span><span class="w"> </span><span class="s2">"at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-10-18T10:59:32.340Z"</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="s2">"audience"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"reference"</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">15</span><span class="w"> </span><span class="p">}</span><span class="w"> 
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>name</strong></td>
<td>string</td>
<td></td>
</tr>
<tr>
<td>shorten_urls</td>
<td>boolean</td>
<td>Should sendings for this message have URLs shortened? Default: <code>true</code></td>
</tr>
<tr>
<td>shorten_urls</td>
<td>boolean</td>
<td>Should MPC&#39;s Shortener track users? Default: <code>false</code></td>
</tr>
<tr>
<td>campaign_id</td>
<td>integer</td>
<td>MPC&#39;s Campaign ID</td>
</tr>
<tr>
<td>service</td>
<td>string</td>
<td><a href="#messaging-message-service">Service</a> the Message is related to</td>
</tr>
<tr>
<td><strong>channels</strong></td>
<td><a href="#messaging-channel-payload-model">ChannelPayload</a>[]</td>
<td>Channels the message should be sent with.</td>
</tr>
<tr>
<td>sending</td>
<td><a href="#messaging-sending-payload-model">SendingPayload</a></td>
<td>Sending to schedule for the message, available only on creation</td>
</tr>
</tbody></table>

<p><br /></p>
<h4 id='validation-errors-specific-to-the-payload-1'><span id=validation-errors-specific-to-the-payload></span>Validation errors specific to the payload</h4>
<table><thead>
<tr>
<th>Attribute</th>
<th>Error key</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>campaign_id</td>
<td>is_relevant_only_for_campaign_service</td>
<td>When campaign_id is given and service is not &quot;campaigns&quot;</td>
</tr>
<tr>
<td>channels</td>
<td>types_must_be_unique</td>
<td></td>
</tr>
<tr>
<td>channels[].type</td>
<td>not_configured</td>
<td>Channel is not configured for Loyalty Club - see <a href="#messaging-show-settings">Messaging &bull; Settings</a></td>
</tr>
</tbody></table>
<h3 id='a-name-messaging-channel-payload-model-a-channelpayload-model-1'><span id=a-name-messaging-channel-payload-model-a-channelpayload-model></span><a name="messaging-channel-payload-model"></a> ChannelPayload model</h3>
<blockquote>
<p>ChannelPayload example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sms"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"sender"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"alphanumeric"</span><span class="p">,</span><span class="w"> </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Infinity"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"template"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"inline"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w"> </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hi {{first_name}}"</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>type</strong></td>
<td>enum: <code>[&#39;sms&#39;, &#39;email&#39;, &#39;push&#39;]</code></td>
<td></td>
</tr>
<tr>
<td><strong>template.type</strong></td>
<td>enum: <code>[&#39;inline&#39;, &#39;reference&#39;]</code></td>
<td></td>
</tr>
<tr>
<td>template.id</td>
<td>integer</td>
<td>ID of Template to assign (when <code>reference</code>)</td>
</tr>
<tr>
<td>template.definition</td>
<td><a href="#messaging-template-payload-model">TemplatePayload</a></td>
<td>Definition of Template to assign (when <code>inline</code>)</td>
</tr>
<tr>
<td><a href="#messaging-channel-specific-attributes">(channel-specific attributes)</a></td>
<td></td>
<td></td>
</tr>
</tbody></table>

<p>There are two ways to provide template:</p>

<ul>
<li><code>inline</code> - you will need provide new template <code>definition</code> </li>
<li><code>reference</code> - template definition will be copied from template identified by <code>id</code> </li>
</ul>
<h4 id='validation-errors-specific-to-the-payload-1'><span id=validation-errors-specific-to-the-payload></span>Validation errors specific to the payload</h4>
<table><thead>
<tr>
<th>Attribute</th>
<th>Error key</th>
</tr>
</thead><tbody>
<tr>
<td>template.id</td>
<td>template_does_not_exist</td>
</tr>
<tr>
<td>template.id</td>
<td>template_does_not_match_channel</td>
</tr>
<tr>
<td>template.definition.type</td>
<td>template_does_not_match_channel</td>
</tr>
<tr>
<td>template.definition.wrapper_id</td>
<td>template_does_not_match_channel</td>
</tr>
</tbody></table>
<h3 id='a-name-messaging-template-payload-model-a-templatepayload-model-1'><span id=a-name-messaging-template-payload-model-a-templatepayload-model></span><a name="messaging-template-payload-model"></a> TemplatePayload model</h3>
<blockquote>
<p>Template example:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"plain"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"wrapper_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">9193</span><span class="p">,</span><span class="w">
  </span><span class="s2">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"body"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hi {{first_name}}"</span><span class="w"> </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>type</strong></td>
<td>enum: <code>[&#39;plain&#39;, &#39;email&#39;, &#39;bee_email&#39;, &#39;push&#39;]</code></td>
<td></td>
</tr>
<tr>
<td><strong>content</strong></td>
<td>Object</td>
<td>Depends on type. See: <a href="#messaging-template-model">Template model</a></td>
</tr>
<tr>
<td>wrapper_id</td>
<td>integer</td>
<td>ID of <a href="#messaging-template-wrapping">wrapping template</a></td>
</tr>
</tbody></table>
<h4 id='validation-errors-specific-to-the-payload-1'><span id=validation-errors-specific-to-the-payload></span>Validation errors specific to the payload</h4>
<table><thead>
<tr>
<th>Attribute</th>
<th>Error key</th>
</tr>
</thead><tbody>
<tr>
<td>wrapper_id</td>
<td>template_does_not_exist</td>
</tr>
<tr>
<td>wrapper_id</td>
<td>wrapper_type_does_not_match</td>
</tr>
</tbody></table>
<h3 id='a-name-messaging-sending-payload-model-a-sendingpayload-model-1'><span id=a-name-messaging-sending-payload-model-a-sendingpayload-model></span><a name="messaging-sending-payload-model"></a> SendingPayload model</h3>
<blockquote>
<p>Example #1 - Creates Sending without schedule to audience defined by given conditions</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="err">//</span><span class="w"> </span><span class="err">Schedule</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">not</span><span class="w"> </span><span class="err">provided</span><span class="p">,</span><span class="w"> </span><span class="err">so</span><span class="w"> </span><span class="err">message</span><span class="w"> </span><span class="err">will</span><span class="w"> </span><span class="err">not</span><span class="w"> </span><span class="err">be</span><span class="w"> </span><span class="err">scheduled</span><span class="w">
  </span><span class="s2">"audience"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"inline"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"conditions"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="s2">"condition_group"</span><span class="p">:</span><span class="w"> </span><span class="s2">"member_properties"</span><span class="p">,</span><span class="w"> </span><span class="s2">"field"</span><span class="p">:</span><span class="w"> </span><span class="s2">"first_name"</span><span class="p">,</span><span class="w"> 
        </span><span class="s2">"operator"</span><span class="p">:</span><span class="w"> </span><span class="s2">"match"</span><span class="p">,</span><span class="w"> </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Piotr"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<blockquote>
<p>Example #2 - schedules message sending 2 days from now to members of audience defined by ID and 2 arbitrary recipients</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"schedule"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"relative"</span><span class="p">,</span><span class="w"> </span><span class="s2">"in"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2 days"</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"audience"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"inline"</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">15</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="s2">"recipients"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w"> </span><span class="s2">"member_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">150</span><span class="p">,</span><span class="w"> </span><span class="s2">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Piotr"</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w"> </span><span class="s2">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"jan@example.com"</span><span class="p">,</span><span class="w"> </span><span class="s2">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Jan"</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>draft</td>
<td>bool</td>
<td>If true (false, by default), the Sending is not scheduled for execution, even if schedule is present</td>
</tr>
<tr>
<td>priority</td>
<td>Integer (1-10)</td>
<td>Requires <code>Messages:Api:Sendings:SetPriority</code> permit</td>
</tr>
<tr>
<td>schedule</td>
<td><a href="#messaging-sending-schedule-payload-model">SendingSchedulePayload</a></td>
<td></td>
</tr>
<tr>
<td>audience</td>
<td><a href="#messaging-sending-audience-payload-model">SendingAudiencePayload</a></td>
<td></td>
</tr>
<tr>
<td>recipients</td>
<td><a href="#messaging-recipient-model">Recipient</a></td>
<td></td>
</tr>
</tbody></table>

<p><br /></p>

<p>There are two methods to define recipients of the sending:</p>

<ul>
<li><code>audience</code> - members of the audience will be used as recipients</li>
<li><code>recipients</code> - inline receivers</li>
</ul>

<p>Both methods can be used at the same time.</p>

<p><code>schedule</code> is optional - when not provided, sending will not be scheduled (will have <code>draft</code> status).</p>

<div class="clear"></div>
<h4 id='validation-errors-specific-to-the-payload-1'><span id=validation-errors-specific-to-the-payload></span>Validation errors specific to the payload</h4>
<table><thead>
<tr>
<th>Attribute</th>
<th>Error key</th>
</tr>
</thead><tbody>
<tr>
<td>(base)</td>
<td>sending_must_have_audience_or_recipients</td>
</tr>
</tbody></table>
<h4 id='a-name-messaging-sending-schedule-payload-model-a-sendingschedulepayload-model-1'><span id=a-name-messaging-sending-schedule-payload-model-a-sendingschedulepayload-model></span><a name="messaging-sending-schedule-payload-model"></a> SendingSchedulePayload model</h4>
<blockquote>
<p>Example #1 - immediate schedule</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w"> 
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"immediate"</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre>
<blockquote>
<p>Example #2 - absolute schedule</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w"> 
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"absolute"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-10-18T10:59:32.340Z"</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre>
<blockquote>
<p>Example #3 - relative schedule</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w"> 
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"relative"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"in"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5 minutes"</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>type</strong></td>
<td>enum: <code>[&#39;immediate&#39;, &#39;absolute&#39;, &#39;relative&#39;]</code></td>
<td></td>
</tr>
<tr>
<td>at</td>
<td>ISO 8601 DateTime</td>
<td>For <code>absolute</code> type - defines exact time the sending should be executed at</td>
</tr>
<tr>
<td>in</td>
<td>string</td>
<td>For <code>relative</code> type - see below</td>
</tr>
</tbody></table>

<p><br /></p>

<p><strong><code>in</code> format</strong></p>

<p>You can provide <code>number</code> of time <code>unit</code>s the sending will be scheduled at in format described by following 
regex: 
<code>^(?&lt;number&gt;\d+) (?&lt;unit&gt;second|minute|hour|day|week|month|year)s?$</code>.</p>

<p>Examples:</p>

<ul>
<li><code>30 minutes</code></li>
<li><code>1 day</code></li>
<li><code>5 months</code></li>
</ul>

<div class="clear"></div>
<h4 id='a-name-messaging-sending-audience-payload-model-a-sendingaudiencepayload-model-1'><span id=a-name-messaging-sending-audience-payload-model-a-sendingaudiencepayload-model></span><a name="messaging-sending-audience-payload-model"></a> SendingAudiencePayload model</h4>
<blockquote>
<p>Example #1 - audience by reference</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w"> 
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"inline"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">532</span><span class="w"> 
</span><span class="p">}</span><span class="w">
</span></code></pre>
<blockquote>
<p>Example #2 - audience by inline conditions</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w"> 
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"inline"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"conditions"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"condition_group"</span><span class="p">:</span><span class="w"> </span><span class="s2">"member_properties"</span><span class="p">,</span><span class="w"> </span><span class="s2">"field"</span><span class="p">:</span><span class="w"> </span><span class="s2">"first_name"</span><span class="p">,</span><span class="w"> 
      </span><span class="s2">"operator"</span><span class="p">:</span><span class="w"> </span><span class="s2">"match"</span><span class="p">,</span><span class="w"> </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Piotr"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<table><thead>
<tr>
<th>Key</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><strong>type</strong></td>
<td>enum: <code>[&#39;reference&#39;, &#39;inline&#39;]</code></td>
<td></td>
</tr>
<tr>
<td>id</td>
<td>integer</td>
<td>For <code>reference</code> type - ID of audience the sending should be sent to</td>
</tr>
<tr>
<td>conditions</td>
<td>Object[]</td>
<td>For <code>inline</code> type - See <a href="https://dmp.boostcom.no/docs/#conditions">DMP docs</a></td>
</tr>
</tbody></table>
<h4 id='validation-errors-specific-to-the-payload-1'><span id=validation-errors-specific-to-the-payload></span>Validation errors specific to the payload</h4>
<table><thead>
<tr>
<th>Attribute</th>
<th>Error key</th>
</tr>
</thead><tbody>
<tr>
<td>id</td>
<td>referenced_audience_must_exist</td>
</tr>
</tbody></table>
