<h1 id="api-v3-reference-draft-work-in-progress">Api V3 reference (draft, work in progress)</h1>

<p><strong>This is only draft!</strong></p>

<p>You can use Api V3 only when your customer is migrated to new backend service for data.</p>

<h2 id="product-name">Product name</h2>

<p>Each system that is communicating with us should uniquely identify itself so it is possible to distinguish optin/update channels.
That will allow further targeting members by communication channel.
For that we use product name and header <code class="prettyprint">X-Product-Name</code> is intended to provide the necessary granularity.</p>

<p>If you miss your product name, please <a href="http://boostcom.no">let us know</a>.</p>

<h2 id="client-authentication-and-authorization-new">Client Authentication and Authorization (new)</h2>

<p>All of the endpoints require a client authorization header - <code class="prettyprint">X-Authorization-Token</code>.</p>

<p>It should be used only on backend and never exposed in frontend code.</p>

<p>There are permits assigned to the token. Depending what permits are assigned, access to some of the endpoints
may be restricted.</p>

<p>If you miss your authentication tokens, please <a href="http://boostcom.no">let us know</a>.</p>

<h2 id="x-user-agent-header">X-User-Agent header</h2>

<p>As single <code class="prettyprint">X-Authorization-Token</code> may be common for multiple clients, <code class="prettyprint">X-User-Agent</code> is required to identify client
for information purposes and debugging so we better know who uses the service.</p>

<p>It should be arbitrary chosen to represent client specifics (e.g. &lsquo;SuperMall Android App&rsquo; or &lsquo;SuperMall backend users service&rsquo;)</p>

<h2 id="common-http-errors">Common HTTP errors</h2>

<table><thead>
<tr>
<th>Error</th>
<th>Reason</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">400 (Bad Request)</code></td>
<td>Some of required headers is missing</td>
</tr>
<tr>
<td><code class="prettyprint">401 (Unauthorized)</code></td>
<td><code class="prettyprint">X-Authorization-Token</code> is invalid (or doesn&rsquo;t match provided loyalty club or product)</td>
</tr>
<tr>
<td><code class="prettyprint">403 (Forbidden)</code></td>
<td>Not authorized to perform this action (no permit)</td>
</tr>
<tr>
<td><code class="prettyprint">404 (Not Found)</code></td>
<td>The requested resource doesn&rsquo;t exist</td>
</tr>
<tr>
<td><code class="prettyprint">422 (Unprocessable Entity)</code></td>
<td>Invalid params are provided (e.g. incorrect properties on member creation)</td>
</tr>
</tbody></table>

<h2 id="oauth2-for-members"><strong>OAuth2 for members</strong></h2>

<h3 id="testing-and-implementation">Testing and implementation</h3>

<p>You can use e.g. this oauth2 client for Ruby: https://github.com/intridea/oauth2</p>

<h3 id="getting-auth-token">Getting Auth Token</h3>

<h4 id="http-request">HTTP request</h4>
<pre class="highlight shell tab-shell"><code>curl -F <span class="nv">grant_type</span><span class="o">=</span>password <span class="se">\</span>
-F <span class="nv">msisdn</span><span class="o">=</span>4740012345 <span class="se">\</span>
-F <span class="nv">password</span><span class="o">=</span>reallyhardpassword <span class="se">\</span>
-X POST http://localhost:3000/oauth/token
</code></pre><pre class="highlight shell tab-shell"><code>curl -F <span class="nv">grant_type</span><span class="o">=</span>refresh_token <span class="se">\</span>
-F <span class="nv">client_id</span><span class="o">=</span>9b36d8c0db59eff5038aea7a417d73e69aea75b41aac771816d2ef1b3109cc2f <span class="se">\</span>
-F <span class="nv">client_secret</span><span class="o">=</span>d6ea27703957b69939b8104ed4524595e210cd2e79af587744a7eb6e58f5b3d2 <span class="se">\</span>
-F <span class="nv">refresh_token</span><span class="o">=</span>c65b265611713028344a2c285dfdc4e28f9ce2dbc36b9f7e12f626a3d106a304 <span class="se">\</span>
-X POST http://localhost:3000/oauth/token
</code></pre>
<blockquote>
<p>When successful, the above commands returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"access_token"</span><span class="p">:</span><span class="s2">"0ddb922452c983a70566e30dce16e2017db335103e35d783874c448862a78168"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"token_type"</span><span class="p">:</span><span class="s2">"bearer"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"expires_in"</span><span class="p">:</span><span class="mi">7200</span><span class="p">,</span><span class="w">
  </span><span class="s2">"refresh_token"</span><span class="p">:</span><span class="s2">"f2188c4165d912524e04c6496d10f06803cc08ed50271a0b0a73061e3ac1c06c"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"scope"</span><span class="p">:</span><span class="s2">"public"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p><strong>POST</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/oauth/token</code></p>

<h4 id="url-parameters">URL Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
</tbody></table>

<h4 id="post-json-parameters">POST (JSON) Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>grant_type</td>
<td>type of grant (e.g. <code class="prettyprint">password</code> or <code class="prettyprint">refresh_token</code>)</td>
</tr>
<tr>
<td>&lsquo;identifier&rsquo; (e.g. <code class="prettyprint">email</code> or <code class="prettyprint">msisdn</code>)</td>
<td>identifier of member</td>
</tr>
<tr>
<td>password</td>
<td>member password while using <code class="prettyprint">password</code> grant_type</td>
</tr>
<tr>
<td>client_id</td>
<td>client id while using <code class="prettyprint">refresh_token</code> grant_type</td>
</tr>
<tr>
<td>client_secret</td>
<td>client secret while using <code class="prettyprint">refresh_token</code> grant_type</td>
</tr>
<tr>
<td>refresh_token</td>
<td>refresh token while using <code class="prettyprint">refresh_token</code> grant_type</td>
</tr>
</tbody></table>

<h3 id="authorizing-with-access_token">Authorizing with access_token</h3>

<p>Add to your request <code class="prettyprint">Authorization</code> header with value: <code class="prettyprint">&quot;Bearer &quot;</code> + <code class="prettyprint">access_token</code>
or add it to query params, e.g. <code class="prettyprint">http://something.pl/anyurl?access_token=fe087c17dd15a84b3c939fbbbd1bbfd196d7ea28cfafbf1d6f15a6c74822ef30</code>.</p>

<h2 id="get-loyalty-clubs-schema">Get loyalty club&rsquo;s schema</h2>
<pre class="highlight shell tab-shell"><code>curl <span class="s2">"https://connect.bstcm.no/api/v3/loyalty_clubs/:loyalty_club_slug/member_schema"</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'X-Authorization-Token: B7t9U9tsoWsGhrv2ouUoSqpM'</span> <span class="se">\</span>
  -H <span class="s1">'X-Product-Name: default'</span> <span class="se">\</span>
  -H <span class="s1">'X-User-Agent: CURL manual test'</span>
</code></pre>
<blockquote>
<p>When successful, the above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"$schema"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://json-schema.org/draft-04/schema#"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"object"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"identifiers"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"email"</span><span class="p">],</span><span class="w">
  </span><span class="s2">"languages"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"en"</span><span class="p">,</span><span class="w"> </span><span class="s2">"no"</span><span class="p">],</span><span class="w">
  </span><span class="s2">"default_language"</span><span class="p">:</span><span class="w"> </span><span class="s2">"no"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"v2"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"email"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"format"</span><span class="p">:</span><span class="w"> </span><span class="s2">"email"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"first_name"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"last_name"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"birthday"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"format"</span><span class="p">:</span><span class="w"> </span><span class="s2">"date"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"interests"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"array"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"items"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"enum"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
          </span><span class="s2">"bikes_and_cars"</span><span class="p">,</span><span class="w">
          </span><span class="s2">"sportwear"</span><span class="w">
        </span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"required"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="s2">"first_name"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"last_name"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"birthday"</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Properties for members are defined as part of the loyalty club they belong to.
To describe member properties we use <a href="http://json-schema.org/documentation.html">JSON Schema</a> definition.
Properties of each member must conform to the defined schema.
We support <strong>JSON schema Draft V4</strong> with format extension for <code class="prettyprint">date</code> (YYYY-MM-DD).</p>

<p>Keys explanation:</p>

<ul>
<li><code class="prettyprint">identifiers</code> [Array of strings] - fields that are set to identify member</li>
<li><code class="prettyprint">languages</code> [Array of strings] - array of languages set up in loyalty club</li>
<li><code class="prettyprint">default_language</code> [string] - default language used in loyalty club and also used for mappings to Api v2</li>
<li><code class="prettyprint">version</code> [string] - version of schema, currently the newest is <code class="prettyprint">v2</code></li>
<li><code class="prettyprint">products</code> [Object] - properties scoping and ordering by product name, default one is <code class="prettyprint">default</code></li>
<li><code class="prettyprint">required</code> [Array of strings] - required properties for member</li>
</ul>

<h3 id="http-request">HTTP Request</h3>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/member_schema</code></p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
</tbody></table>

<aside class="notice">
Authentication only with <code>X-Authorization-Token</code>.
</aside>

<h2 id="send-member-token">Send member token</h2>

<p><strong>Member tokens</strong> are used to authenticate actions on particular members.
<strong>Member token</strong> could be issued even before registering enduser as a member in community.
In that case we create temporary token that is valid till end of day.
That <strong>member token</strong> could be used to authenticate <em>Create Member</em> action described below.</p>

<p>It sends member token to the user via SMS.</p>

<p>It can be used multiple times.</p>

<p>If msisdn is not valid, then <code class="prettyprint">400 Bad Request</code> is returned.</p>

<h3 id="http-request">HTTP Request</h3>

<p><strong>POST</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/:msisdn/send_token</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
<tr>
<td>msisdn</td>
<td>unique member&rsquo;s msisdn as defined <a href="#msisdn-member-identifier">here</a>) Example: <code class="prettyprint">4740485124</code>.</td>
</tr>
</tbody></table>

<aside class="notice">
Authentication with <code>X-Authorization-Token</code> or <code>X-Customer-Private-Token</code>.
</aside>

<h2 id="check-if-member-exists">Check if member exists</h2>
<pre class="highlight shell tab-shell"><code>curl -I <span class="s2">"https://connect.bstcm.no/api/v3/loyalty_clubs/:loyalty_club_slug/members/:id"</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'X-Authorization-Token: B7t9U9tsoWsGhrv2ouUoSqpM'</span> <span class="se">\</span>
  -H <span class="s1">'X-Product-Name: default'</span> <span class="se">\</span>
  -H <span class="s1">'X-User-Agent: CURL manual test'</span>
</code></pre>
<blockquote>
<p>Returns hash consisting of just one property: :exists</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"exists"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">If</span><span class="w"> </span><span class="err">exists</span><span class="p">,</span><span class="w"> </span><span class="kc">true</span><span class="err">.</span><span class="w"> </span><span class="err">If</span><span class="w"> </span><span class="err">not</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="err">.</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>It can be used to check if member is in loyalty club or not.</p>

<h3 id="http-request">HTTP Request</h3>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/:id/check_existence</code></p>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/by_msisdn/:msisdn/check_existence</code></p>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/by_email/:email/check_existence</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
<tr>
<td>id</td>
<td>member&rsquo;s ID.</td>
</tr>
<tr>
<td>msisdn</td>
<td>unique member&rsquo;s msisdn as defined <a href="#msisdn-member-identifier">here</a>) Example: <code class="prettyprint">4740485124</code>.</td>
</tr>
<tr>
<td>email</td>
<td>unique member&rsquo;s email.</td>
</tr>
</tbody></table>

<h3 id="response-code">Response code</h3>

<ul>
<li><strong>200</strong> </li>
</ul>

<aside class="notice">
Requires &lsquo;BL:Api:Members:Check&rsquo; permit
</aside>

<h2 id="get-member">Get member</h2>
<pre class="highlight shell tab-shell"><code>curl <span class="s2">"https://connect.bstcm.no/api/v3/loyalty_clubs/:loyalty_club_slug/members/:id"</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'X-Authorization-Token: B7t9U9tsoWsGhrv2ouUoSqpM'</span> <span class="se">\</span>
  -H <span class="s1">'X-Product-Name: default'</span> <span class="se">\</span>
  -H <span class="s1">'X-User-Agent: CURL manual test'</span>
</code></pre>
<blockquote>
<p>When successful, the above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">42</span><span class="p">,</span><span class="w">
  </span><span class="s2">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"first_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Ola"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"last_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nordmann"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"birthday"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1990-10-23"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"interests"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="s2">"bikes_and_cars"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"sportwear"</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"child_birth_years"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="mi">2010</span><span class="p">,</span><span class="w">
      </span><span class="mi">2011</span><span class="p">,</span><span class="w">
      </span><span class="mi">2011</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"language"</span><span class="p">:</span><span class="w"> </span><span class="s2">"no"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"sms_status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"enabled"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"email_status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"hard_bounced"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"push_status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"disabled"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"created_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2017-01-19T10:07:08.336+01:00"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"updated_at"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2017-04-03T09:35:19.313+02:00"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Fetches member&rsquo;s properties.</p>

<table><thead>
<tr>
<th>Key</th>
<th>Description</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td>id</td>
<td>Member ID</td>
<td>integer</td>
</tr>
<tr>
<td>properties</td>
<td>Object with member&rsquo;s properties</td>
<td>JSON Object</td>
</tr>
<tr>
<td>properties[&lsquo;language&rsquo;]</td>
<td>Language used by user</td>
<td>string</td>
</tr>
<tr>
<td>consents</td>
<td>[incoming]</td>
<td>JSON Object</td>
</tr>
<tr>
<td>sms_status</td>
<td>Status of sms channel</td>
<td>string</td>
</tr>
<tr>
<td>email_status</td>
<td>Status of email channel</td>
<td>string</td>
</tr>
<tr>
<td>push_status</td>
<td>Status of push channel</td>
<td>string</td>
</tr>
<tr>
<td>created_at</td>
<td>Time when the user was firstly created</td>
<td>string</td>
</tr>
<tr>
<td>updated_at</td>
<td>Time when the user was last updated</td>
<td>string</td>
</tr>
</tbody></table>

<h3 id="http-request">HTTP Request</h3>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/:id</code></p>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/by_msisdn/:msisdn</code></p>

<p><strong>GET</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/by_email/:email</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
<tr>
<td>id</td>
<td>member&rsquo;s ID.</td>
</tr>
<tr>
<td>msisdn</td>
<td>unique member&rsquo;s msisdn as defined <a href="#msisdn-member-identifier">here</a>) Example: <code class="prettyprint">4740485124</code>.</td>
</tr>
<tr>
<td>email</td>
<td>unique member&rsquo;s email.</td>
</tr>
</tbody></table>

<h3 id="responses">Responses</h3>

<ul>
<li><strong>200</strong> - success with member&rsquo;s properties in response body</li>
<li><strong>404 Not found</strong> - member with given identifier not found </li>
</ul>

<aside class="notice">
Requires &lsquo;BL:Api:Members:Get&rsquo; permit
</aside>

<h2 id="create-member">Create member</h2>
<pre class="highlight shell tab-shell"><code>
curl -X POST <span class="se">\</span>
  https://connect.bstcm.no/api/v3/loyalty_clubs/:loyalty_club_slug/members <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'X-Authorization-Token: B7t9U9tsoWsGhrv2ouUoSqpM'</span> <span class="se">\</span>
  -H <span class="s1">'X-Product-Name: default'</span> <span class="se">\</span>
  -H <span class="s1">'X-User-Agent: CURL manual test'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "properties": {
        "email": "dev+6@test.com",
        "msisdn": "4740485124",
        "first_name": "THe",
        "last_name": "Doge"
    },
    "send_welcome_message": false
}'</span>

</code></pre>
<blockquote>
<p>When successful, the above command returns JSON as depicted in &ldquo;Get member&rdquo; section</p>

<p>When payload is invalid, validation errors like this are returned:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"email"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">

            </span><span class="s2">"property"</span><span class="p">:</span><span class="w"> </span><span class="s2">"email"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="s2">"duplicated_email_in_community"</span><span class="p">,</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Create member with given properties.</p>

<p>Available properties and their validation rules are defined by Loyalty Club schema (see: <a href="#get-loyalty-clubs-schema34">Get loyalty&rsquo;s club schema</a>).</p>

<p>Actual welcome messages sending depends on Loyalty Club and Product configuration.
For example, even if send_email_welcome_message:true param is provided, message may not be sent because either Product 
or Loyalty has disabled welcome messages or Loyalty Club has no e-mails configured at all.</p>

<p>There is also a possibility to have multiple SMS welcome messages sent. The one that matches Product or default one will be sent.</p>

<h3 id="http-request">HTTP Request</h3>

<p><strong>POST</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
</tbody></table>

<h3 id="post-json-parameters">POST (JSON) Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Required?</th>
<th>Default</th>
<th>Description</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td>properties</td>
<td><strong>yes</strong></td>
<td>none</td>
<td>JSON with properties for member</td>
<td>JSON Object</td>
</tr>
<tr>
<td>properties[&lsquo;language&rsquo;]</td>
<td>no</td>
<td>&ldquo;default_language&rdquo; from schema</td>
<td>Language used by user</td>
<td>string</td>
</tr>
<tr>
<td>properties[&lsquo;msisdn&rsquo;]</td>
<td>yes*</td>
<td>none</td>
<td>Unique member&rsquo;s msisdn as defined <a href="#msisdn-member-identifier">here</a>) Example: <code class="prettyprint">4740485124</code>.</td>
<td>string</td>
</tr>
<tr>
<td>properties[&lsquo;email&rsquo;]</td>
<td>yes*</td>
<td>none</td>
<td>Member&rsquo;s email</td>
<td>string</td>
</tr>
<tr>
<td>sms_enabled</td>
<td>no</td>
<td>true</td>
<td>Should SMS channel be enabled for member?</td>
<td>Boolean</td>
</tr>
<tr>
<td>email_enabled</td>
<td>no</td>
<td>true</td>
<td>Should email channel be enabled for member?</td>
<td>Boolean</td>
</tr>
<tr>
<td>push_enabled</td>
<td>no</td>
<td>true</td>
<td>Should push channel will be enabled for member?</td>
<td>Boolean</td>
</tr>
<tr>
<td>send_sms_welcome_message</td>
<td>no</td>
<td>true</td>
<td>Should SMS welcome message be sent to member?</td>
<td>Boolean</td>
</tr>
<tr>
<td>send_email_welcome_message</td>
<td>no</td>
<td>true</td>
<td>Should email welcome be sent to member</td>
<td>Boolean</td>
</tr>
</tbody></table>

<p>&ast; At least one of those properties must be provided</p>

<h3 id="responses">Responses</h3>

<ul>
<li><strong>200</strong> - Created member JSON object</li>
<li><strong>422 Unprocessable entity</strong> - <a href="#validation-on-members">validation errors</a> JSON object.</li>
</ul>

<aside class="notice">
Requires &lsquo;BL:Api:Members:Create&rsquo; permit
</aside>

<h2 id="update-member">Update member</h2>
<pre class="highlight shell tab-shell"><code>
curl -X PUT <span class="se">\</span>
  https://connect.bstcm.no/api/v3/loyalty_clubs/:loyalty_club_slug/members/:id <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'X-Authorization-Token: B7t9U9tsoWsGhrv2ouUoSqpM'</span> <span class="se">\</span>
  -H <span class="s1">'X-Product-Name: default'</span> <span class="se">\</span>
  -H <span class="s1">'X-User-Agent: CURL manual test'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "properties": {
        "last_name": "Doge"
    }
}'</span>

</code></pre>
<blockquote>
<p>When successful, the above command returns JSON as depicted in &ldquo;Get member&rdquo; section</p>

<p>When payload is invalid, validation errors like this are returned:</p>
</blockquote>

<p>Update member&rsquo;s properties with given ones.</p>

<p>It is intended for partial updates - not given properties are neither deleted nor overwritten.</p>

<p>If deleting attribute is is intended, its value should be set to <code class="prettyprint">null</code>.</p>

<h3 id="http-request">HTTP Request</h3>

<p><strong>PUT</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/:id</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
<tr>
<td>id</td>
<td>member&rsquo;s ID.</td>
</tr>
</tbody></table>

<h3 id="put-json-parameters">PUT (JSON) Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Required?</th>
<th>Default</th>
<th>Description</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td>properties</td>
<td><strong>yes</strong></td>
<td>none</td>
<td>JSON with properties for member</td>
<td>JSON Object</td>
</tr>
<tr>
<td>sms_enabled</td>
<td>no</td>
<td>true</td>
<td>Should SMS channel be enabled for member?</td>
<td>Boolean</td>
</tr>
<tr>
<td>email_enabled</td>
<td>no</td>
<td>true</td>
<td>Should email channel be enabled for member?</td>
<td>Boolean</td>
</tr>
<tr>
<td>push_enabled</td>
<td>no</td>
<td>true</td>
<td>Should push channel will be enabled for member?</td>
<td>Boolean</td>
</tr>
</tbody></table>

<h3 id="responses">Responses</h3>

<ul>
<li><strong>200</strong> - Updated member JSON object</li>
<li><strong>404 Not found</strong> - member could not be found</li>
<li><strong>422 Unprocessable entity</strong> - <a href="#validation-on-members">validation errors</a> JSON object.</li>
</ul>

<aside class="notice">
Requires &lsquo;BL:Api:Members:Update&rsquo; permit
</aside>

<h2 id="remove-member">Remove member</h2>

<p>Removes member from loyalty club.</p>

<p>It is possible to trigger optout message by setting <code class="prettyprint">send_unsubscribe_message=true</code> query string parameter.
Same as welcome messages, optout messages sending also depends on Loyalty Club and Product configuration.</p>

<h3 id="http-request">HTTP Request</h3>
<pre class="highlight shell tab-shell"><code>curl -X DELETE <span class="se">\</span>
    <span class="s2">"https://connect.bstcm.no/api/v3/loyalty_clubs/:loyalty_club_slug/members/:id"</span> <span class="se">\</span>
    -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
    -H <span class="s1">'X-Authorization-Token: B7t9U9tsoWsGhrv2ouUoSqpM'</span> <span class="se">\</span>
    -H <span class="s1">'X-Product-Name: default'</span> <span class="se">\</span>
    -H <span class="s1">'X-User-Agent: CURL manual test'</span>
</code></pre>
<blockquote>
<p>When successful, the above command returns JSON as depicted in &ldquo;Get member&rdquo; section</p>
</blockquote>

<p><strong>DELETE</strong> <code class="prettyprint">api/v3/loyalty_clubs/:loyalty_club_slug/members/:id</code></p>

<h3 id="url-parameters">URL Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>loyalty_club_slug</td>
<td>unique slugified name of the loyalty club. Example: <code class="prettyprint">boosters</code>.</td>
</tr>
<tr>
<td>id</td>
<td>member&rsquo;s ID.</td>
</tr>
</tbody></table>

<h3 id="query-parameters">Query Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>Required?</th>
<th>Default</th>
<th>Description</th>
<th>Type</th>
</tr>
</thead><tbody>
<tr>
<td>send_unsubscribe_message</td>
<td>no</td>
<td>true</td>
<td>Should optout message be sent to member?</td>
<td>Boolean</td>
</tr>
</tbody></table>

<h3 id="responses">Responses</h3>

<ul>
<li><strong>200</strong> - Destroyed member JSON object</li>
<li><strong>404 Not found</strong> - member could not be found</li>
</ul>

<aside class="notice">
Requires &lsquo;BL:Api:Members:Destroy&rsquo; permit
</aside>
